@model Verificador.Vista.Models.ImpresionTicketsViewModel
<script>
    function getEvento() {
        return { idEvento: '@(Model.Id)' };
    }
    function ImprimirTickets() {
        let etapa = $("#Etapa").data("kendoDropDownList");
        if (etapa.value() == "") {
            alert("Primero debe de seleccionar la estapa");
        }
        let localidad = $("#Localidad").data("kendoDropDownList");
        if (localidad.value() == "") {
            alert("Primero debe de selccionar la localidad");
        }
        let cantidad = $("#cantidad-tickets").val();
        if (cantidad == "") {
            alert("Debe de digitar la cantdad de tickets que desea imprimir");
        }
        $.post("@Url.Action("PrintTickets", "Evento")",
            {
                Id: @(Model.Id),
                Etapa: etapa.value(),
                Localidad: localidad.value(),
                Cantidad: cantidad
            }, function (e) {
                //alert("Tickets en cola de impresion");
                $("#canvas-preview").html(e);
                //$("#modal-print").modal("hide");
        })
    }
</script>
<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal">&times;</button>
    <h4 class="modal-title">@(Model.Nombre)</h4>
</div>
<div class="modal-body">
    <div class="row">
        <div class="col-xs-12 col-sm-6 col-md-6">
            <div class="form-group">
                @Html.Label("Etapa", new { @class = "form-control-label" })
                @(Html.Kendo().DropDownList().Name("Etapa")
                .DataSource(source =>
                {
                    source.Read(read =>
                    {
                        read.Action("getEtapasByEvent", "Evento").Data("getEvento");
                    })
                    .ServerFiltering(true);
                })
                .OptionLabel("Seleccione")
                .DataTextField("Text")
                .DataValueField("Value")
                .HtmlAttributes(new { @class = "form-control", placeholder = "Seleccione" }))
            </div>
        </div>
        <div class="col-xs-12 col-sm-6 col-md-6">
            <div class="form-group">
                @Html.Label("Localidad", new { @class = "form-control-label" })
                @(Html.Kendo().DropDownList().Name("Localidad")
                .DataSource(source =>
                {
                    source.Read(read =>
                    {
                        read.Action("getLocalidadesByEvent", "Evento").Data("getEvento");
                    })
                    .ServerFiltering(true);
                })
                .OptionLabel("Seleccione")
                .DataTextField("Text")
                .DataValueField("Value")
                .HtmlAttributes(new { @class = "form-control", placeholder = "Seleccione" }))
            </div>
        </div>        
    </div>
    <div class="row">
        <div class="col-xs-12 col-sm-6 col-md-6">
            <div class="form-group">
                @Html.Label("Cantidad de Tickets a imprimir", new { @class = "form-control-label" })
                @Html.TextBox("cantidad-tickets", null, new { @class = "form-control", type = "number", min = "0" })
            </div>
        </div>
        <div class="col-xs-12 col-sm-6 col-md-6">
            <div class="form-group">
                
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12" id="canvas-preview"></div>        
    </div>
</div>
<div class="modal-footer">
    <button type="button" class="btn btn-primary"><span class="glyphicon glyphicon-print" aria-hidden="true" onclick="ImprimirTickets()"></span>&nbsp;Imprimir Tickets</button>
    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
</div>

